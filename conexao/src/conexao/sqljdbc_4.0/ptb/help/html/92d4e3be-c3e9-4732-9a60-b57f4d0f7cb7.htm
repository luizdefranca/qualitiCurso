<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Usando buffer adaptável</title><meta name="Language" content="pt-br" /><meta name="System.Keywords" content="adaptive" /><meta name="System.Keywords" content="adaptive buffering" /><meta name="System.Keywords" content="isWrapperFor" /><meta name="System.Keywords" content="selectMethod" /><meta name="System.Keywords" content="unwrap" /><meta name="Microsoft.Help.Id" content="92d4e3be-c3e9-4732-9a60-b57f4d0f7cb7" /><meta name="Description" content="O buffer adaptável é criado para recuperar qualquer tipo de dados de valor grande sem a sobrecarga de cursores de servidor. Aplicativos podem usar o recurso de utilização de buffer adaptável com todas as versões do SQL Server que têm suporte do driver." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">Usando buffer adaptável</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>O buffer adaptável é criado para recuperar qualquer tipo de dados de valor grande sem a sobrecarga de cursores de servidor. Aplicativos podem usar o recurso de utilização de buffer adaptável com todas as versões do SQL Server que têm suporte do driver.</p><p>Normalmente, quando o Microsoft JDBC Driver para SQL Server executa uma consulta, o driver recupera todos os resultados do servidor na memória do aplicativo. Embora esta abordagem minimize o consumo de recursos no SQL Server, ela pode lançar um <b>OutOfMemoryError</b> no aplicativo de JDBC para as consultas que geram resultados muito grandes.</p><p>Para permitir que aplicativos administrem resultados muito grandes, o Microsoft JDBC Driver para SQL Server fornece um buffer adaptável. Com buffer adaptável, o driver recupera os resultados da execução da instrução a partir do SQL Server à medida que o aplicativo precisa deles, em vez de todos de uma vez. O driver também descarta os resultados assim que o aplicativo já não os pode acessar. Veja a seguir alguns exemplos em que o buffer adaptável pode ser útil: </p><ul><li><p><b>A consulta gera um conjunto de resultados muito grande:</b> o aplicativo pode executar uma instrução SELECT que gera mais linhas que o aplicativo pode armazenar na memória. Em versões anteriores, o aplicativo tinha que usar um cursor de servidor para evitar um <b>OutOfMemoryError</b>. O buffer adaptável permite fazer uma passagem somente avanço somente leitura de um conjunto de resultados arbitrariamente grande sem exigir um cursor de servidor. </p></li><li><p><b>A consulta gera colunas </b><a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a><b> muito grandes ou valores de parâmetro OUT </b><a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a><b>:</b> o aplicativo pode recuperar um único valor (coluna ou parâmetro OUT) que é grande demais para caber inteiramente na memória do aplicativo. O buffer adaptável permite que o aplicativo cliente recupere esse valor como um fluxo, usando os métodos <b>getAsciiStream</b>, <b>getBinaryStream,</b> ou <b>getCharacterStream</b>. O aplicativo recupera o valor do SQL Server à medida que lê o fluxo.</p><p /></li></ul><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Com buffer adaptável, o driver JDBC armazena em buffer somente a quantidade de dados necessária. O driver não fornece nenhum método público para controlar ou limitar o tamanho do buffer.</p></div></div><h1 class="heading">Definindo buffer adaptável</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>A partir do driver JDBC versão 2.0, o comportamento padrão do driver é <span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>. Em outras palavras, para obter o comportamento de buffer adaptável, o aplicativo não precisa solicitar o comportamento adaptável explicitamente. Na versão 1.2, no entanto, o modo de buffer era "<span sdata="langKeyword" value="full"><span class="keyword">full</span></span>" por padrão e o aplicativo precisava solicitar o modo de buffer adaptável explicitamente.</p><p>Há três maneiras de um aplicativo solicitar que a execução de instrução use buffer adaptável:</p><ul><li><p>O aplicativo pode definir a propriedade de conexão <span sdata="langKeyword" value="responseBuffering"><span class="keyword">responseBuffering</span></span> como "adaptável". Para obter mais informações sobre como configurar as propriedades de conexão, consulte <span sdata="link"><a href="f1b62700-f046-488d-bd6b-a5cd8fc345b7.htm">Definindo as propriedades de conexão</a></span>. </p></li><li><p>O aplicativo pode usar o método <a href="c9e43ff2-8117-4dca-982d-83c863d0c8e1.htm">setResponseBuffering</a> do objeto <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> para definir o modo de buffer de resposta para todas as conexões criadas por aquele objeto <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a>.</p></li><li><p>O aplicativo pode usar o método <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> da classe <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> para definir o modo de buffer de resposta para um objeto de instrução específico. </p></li></ul><p>Ao usar o JDBC Driver versão 1.2, os aplicativos precisaram converter o objeto de instrução para uma classe <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> para usar o método <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a>. Os exemplos de código no <span sdata="link"><a href="6c986144-3854-4352-8331-e79eccbefc28.htm">Lendo exemplo de dados grande</a></span> e no <span sdata="link"><a href="58c76635-a117-4661-8781-d6cb231c5809.htm">Exemplo de leitura de dados grandes com procedimentos armazenados</a></span> demonstram este uso antigo. </p><p>Porém, com o driver JDBC versão 2.0, os aplicativos podem usar o método <a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a> e o método <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a> para acessar a funcionalidade específica do fornecedor sem qualquer pressuposição sobre a hierarquia de classe de implementação. Para código de exemplo, consulte o tópico <span sdata="link"><a href="76ecc05f-a77d-40a2-bab9-91a7fcf17347.htm">Atualizando exemplo de dados grande</a></span>.</p></div><h1 class="heading">Recuperando dados grandes com buffer adaptável</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>Quando valores grandes são lidos uma vez usando os métodos get&lt;Type&gt;Stream e as colunas ResultSet e os parâmetros OUT do CallableStatement são acessados na ordem retornada pelo SQL Server, o buffer adaptável minimiza o uso de memória de aplicativo ao processar os resultados. Ao usar buffer adaptável:</p><ul><li><p>Os métodos <b>get&lt;Type&gt;Stream</b> definidos nas classes <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> e <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> retornam fluxos somente leitura por padrão, embora os fluxos possam ser reiniciados se estiver marcado pelo aplicativo. Se o aplicativo desejar <span class="code">reset</span> o fluxo, primeiro terá que chamar o método <span class="code">mark</span> naquele fluxo. </p></li><li><p>Os métodos <b>get&lt;Type&gt;Stream</b> definidos nas classes <a href="24170524-e1ab-4e80-8fd1-6688efacfbde.htm">SQLServerClob</a> e <a href="88bd8623-889d-4b5d-99ff-c85b32f3ff5c.htm">SQLServerBlob</a> retornam fluxos que sempre podem ser reposicionados para a posição de início do fluxo sem chamar o método <span class="code">mark</span>. </p></li></ul><p>Quando o aplicativo usar buffer adaptável, os valores recuperados pelos métodos <b>get&lt;Type&gt;Stream</b> somente podem ser recuperados uma vez. Se você tentar chamar qualquer método <b>get&lt;Type&gt;</b> na mesma coluna ou parâmetro depois de chamar o método <b>get&lt;Type&gt;Stream</b> do mesmo objeto, uma exceção será lançada com a mensagem "Os dados foram acessados e não estão disponíveis para esta coluna ou parâmetro".</p></div><h1 class="heading">Diretrizes para usar buffer adaptável</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>Os desenvolvedores devem seguir estas diretrizes importantes para minimizar o uso de memória pelo aplicativo:</p><ul><li><p>Evite usar a propriedade da cadeia de conexão <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> para permitir que o aplicativo processe um conjunto de resultados muito grande. O recurso de buffer adaptável permite que os aplicativos processem conjuntos de resultados somente encaminhamento e somente leitura muito grandes sem usar um cursor de servidor. Observe que, quando você define <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span>, todos os conjuntos de resultados somente avanço e somente leitura gerados por aquela conexão são afetados. Em outras palavras, se seu aplicativo processar conjuntos de resultados curtos habitualmente com alguns linhas, criar, ler e fechar um cursor de servidor para cada conjunto de resultados usará mais recursos do lado do cliente e lado de servidor que seria o caso onde <span sdata="langKeyword" value="selectMethod"><span class="keyword">selectMethod</span></span> não é definido como <span sdata="langKeyword" value="cursor"><span class="keyword">cursor</span></span>.</p></li><li><p>Leia texto grande ou valores binários como fluxos usando os métodos <b>getAsciiStream</b>, <b>getBinaryStream,</b> ou <b>getCharacterStream</b> em vez dos métodos <b>getBlob</b> ou <b>getClob</b>. A partir da versão 1.2, a classe <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> oferece novos métodos <b>get&lt;Type&gt;Stream</b> para este propósito.</p></li><li><p>Verifique se as colunas com valores potencialmente grandes são colocadas por último na lista de colunas em uma instrução SELECT e se os métodos <b>get&lt;Type&gt;Stream</b> do <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> são usados para acessar as colunas na ordem em que são selecionadas.</p></li><li><p>Verifique se os parâmetros OUT com valores potencialmente grandes são declarados por último na lista de parâmetros no SQL usada para criar <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>. Além disso, verifique se os métodos <b>get&lt;Type&gt;Stream</b> do <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> são usados para acessar os parâmetros OUT na ordem em que eles são declarados.</p></li><li><p>Evite executar mais de uma instrução na mesma conexão simultaneamente. Executar outra instrução antes de processar os resultados da instrução anterior pode fazer os resultados não processados serem armazenados em buffer na memória do aplicativo.</p></li><li><p>Há alguns casos em que usar <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> em vez de <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> seria mais benéfico, por exemplo:</p><ul><li><p>Se seu aplicativo processar um conjunto de resultados somente avanço e somente leitura lentamente, como ler cada linha depois de alguma entrada do usuário, usar <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> em vez de <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> pode ajudar a reduzir o uso de recurso pelo SQL Server. </p></li><li><p>Se seu aplicativo processar dois ou mais conjuntos de resultados somente avanço e somente leitura ao mesmo tempo na mesma conexão, usar <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> em vez de <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> pode ajudar a reduzir a memória exigida pelo driver para processar estes conjuntos de resultados.</p></li></ul><p>Em ambos os casos, você precisa considerar a sobrecarga de criar, ler e fechar os cursores de servidor.</p></li></ul><p>Além disso, a lista a seguir fornece algumas recomendações para conjuntos de resultados roláveis e atualizáveis somente avanço:</p><ul><li><p>Para conjuntos de resultados roláveis, ao buscar um bloco de linhas, o driver sempre lê na memória o número de linhas indicado pelo método <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> do objeto <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, até mesmo quando o buffer adaptável está habilitado. Se rolar causar um <b>OutOfMemoryError</b>, você pode reduzir o número de linhas buscadas chamando o método <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> do objeto <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> para definir o tamanho da busca como um número menor de linhas, até mesmo 1 linha, se necessário. Se isto não impedir um <b>OutOfMemoryError, </b>evite incluir colunas muito grandes em conjuntos de resultados roláveis.</p></li><li><p>Para conjuntos de resultados roláveis, ao buscar um bloco de linhas, o driver geralmente lê na memória o número de linhas indicado pelo método <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> do objeto <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, até mesmo quando o buffer adaptável está habilitado na conexão. Se chamar o método <a href="60248447-6908-4036-a779-a501453cd553.htm">next</a> do objeto <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> resultar em um <b>OutOfMemoryError</b>, você pode reduzir o número de linhas buscadas chamando o método <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> do objeto <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> para definir o tamanho da busca como um número menor de linhas, até mesmo 1 linha, se necessário. Você também pode forçar o driver a não armazenar em buffer nenhuma linha chamando o método <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> do objeto <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> com o parâmetro "<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>" antes de executar a instrução. Como o conjunto de resultados não é rolável, se o aplicativo acessar um valor de coluna grande usando um dos métodos <b>get&lt;Type&gt;Stream</b>, o driver descartará o valor assim que for lido pelo aplicativo, da mesma maneira que faz para os conjuntos de resultados somente leitura somente avanço.</p></li></ul></div><span id="seeAlsoSpan"><h1 class="heading">Consulte também</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="e1592499-b87b-45ee-bab8-beaba8fde841.htm">Melhorando o desempenho e a confiabilidade com o JDBC Driver</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">Envie <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dObrigado%20por%20seus%20comentários.%20As%20equipes%20de%20desenvolvimento%20usam%20seus%20comentários%20para%20melhorar%20a%20documentação.%20Enquanto%20estivermos%20examinando%20seus%20comentários%20,%20poderemos%20enviar%20um%20email%20solicitando%20mais%20esclarecimentos%20ou%20comentários%20sobre%20a%20solução%20encontrada%20.%20Não%20usaremos%20seu%20endereço%20de%20email%20para%20nenhum%20outro%20propósito%20e%20o%20excluiremos%20após%20concluirmos%20a%20análise.%0\APara%20obter%20informações%20sobre%20a%20política%20de%20privacidade%20da%20Microsoft,%20consulte%20http://privacy.microsoft.com/pt-br/default.aspx.%0\A%0\d','Comentários%20do%20cliente.');">comentários</a> sobre este tópico à Microsoft.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft. Todos os direitos reservados.</a></p></span></div></div></body></html>